Users

Nome da Tabela: TBUsers
npx sequelize-cli model:generate --name TBUsers --attributes name:string,email:string,password:string,role:string,restaurant:string
	
Modelo (Example Value):

[
{
"id" : "Auto Increment by Database" (Primary Key),
"name" : "string" (Descrição do Nome do Usuário) ,
"email" : "string" (Email) ,
"password" : "string" (Password) ,
"role" : "string" (Descrição do Cargo) ,
"restaurant" : "string" (Descrição do Restaurante) 
}
]

__________________________________________________________________________________________________________________

Products

Nome da Tabela: TBProducts
npx sequelize-cli model:generate --name TBProducts --attributes name:string,typeProducts:string,category:string,image:string,price:numeric,typeMenu:string

Modelo (Example Value):

[
{
		"id" : "Auto Increment by Database" (Primary Key) , 
		"name" : "string" (Descrição do Nome do Lanche),
		"typeProducts" : "string" (Descrição Single, Double ou Triple) ,
		"category" : "string" (Descrição da Categoria - Bovina, Suína, Aves ou Vegetal),
		"image" : "string" (Image),
		"price" : "numeric" (Preço),
		"typeMenu" : "string" (Tipo de Menu - Café da Manhã / Almoço ou Janta),
}
]

__________________________________________________________________________________________________________________

Planejamento de Estrutura de "Orders"

					//		NÃO APLICADO AINDA		//

Nome da Tabela: TBProductsOrders

npx sequelize-cli model:generate --name TBProductsOrders --attributes id: uuid,productsID:uuid,ordersID:uuid,qtd:integer

Modelo (Example Value):

[
{
"id" : "Auto Increment by Database" (Primary Key),
"productsID" : ( Primary Key de Products - Vinculo de relacionamento de Tabela - "TBProducts") ,
"ordersID" : ( Primary Key de Orders - Vinculo de relacionamento de Tabela - "TBOrders") ,
"qtd" : "integer" (Quantidades) ,
}
]

__________________________________________________________________________________________________________________

					//		NÃO APLICADO AINDA		//

Nome da Tabela: TBOrders 

npx sequelize-cli model:generate --name TBOrders --attributes id:uuid,userID:uuid,clientName:string,table:integer,status:string,comments:string,processedAt:DATE


[
  {
    "id": 0,
	"userID": 0,
    "clientName": "string",
     "table": 0,
    "status": "string",
	 "comments": "string",
	 "processedAt": "2021-03-27",
	
    "createdAt": "2021-03-27",
    "updatedAt": "2021-03-27",
    "Products": [
      {
        "id": 0,
        "name": "string",
        "flavor": "string",
        "complement": "string",
        "qtd": 0
      }
    ]
  }
]


{
  "client": "string",
  "table": "string",
   "comments": "string",
  "products": [
    {
      "id": 0,
      "qtd": 0
    }
  ]
}

__________________________________________________________________________________________________________________

					//		NÃO APLICADO AINDA		//



Futuras Implementações para melhorias:

Com a experiência do Projeto anterior, a ideia é criar um Campo para Complementos vinculando ao Produto e a Comanda. Afim de contabilizar valores e quantidades.

Nome da Tabela: TBComplements
Nome da Tabela: TBComplementsOrders 
